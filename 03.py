# Класс Tomato:
# 1.	Создайте класс Tomato
class Tomato():
# 2.	Создайте статическое свойство states, которое будет содержать все стадии созревания помидора
    states={1:'семя',2:'саженец',3:'плод'}
# 3.	Создайте метод __init__(), внутри которого будут определены два динамических protected свойства:
# 1) _index - передается параметром и
# 2) _state - принимает первое значение из словаря states
    def __init__(self,index,states):
        self._index=index
        self._state=states[1]
# 4.	Создайте метод grow(), который будет переводить томат на следующую стадию созревания
    def grow():
        pass
# 5.	Создайте метод is_ripe(), который будет проверять, что томат созрел (достиг последней стадии созревания)
    def is_ripe():
        pass


# Класс TomatoBush
# 1.	Создайте класс TomatoBush
class TomatoBush():
# 2.	Определите метод __init__(), который будет принимать в качестве параметра количество томатов и
# на его основе будет создавать список объектов класса Tomato. Данный список будет храниться внутри
# динамического свойства tomatoes.
    def __init__(self,num_tom):
        self.num_tom=num_tom
        self.tomatoes=[]
# 3.	Создайте метод grow_all(), который будет переводить все объекты из списка томатов на следующий этап созревания
    def grow_all():
        pass
# 4.	Создайте метод all_are_ripe(), который будет возвращать True, если все томаты из списка стали спелыми
    def all_are_ripe():
       pass
# 5.	Создайте метод give_away_all(), который будет чистить список томатов после сбора урожая
    def give_away_all()
        pass

# Класс Gardener
# 1.	Создайте класс Gardener
class Gardener():
# 2.	Создайте метод __init__(), внутри которого будут определены два динамических свойства:
# 1) name - передается параметром, является публичным и
# 2) _plant - принимает объект класса Tomato, является protected
    def __init__(self,name):
        self.name=name
        self._plant=
# 3.	Создайте метод work(), который заставляет садовника работать, что позволяет растению становиться более зрелым
    def work():
        print('Садовник работай, а то ничего не растёт)))))')
# 4.	Создайте метод harvest(), который проверяет, все ли плоды созрели. Если все - садовник собирает урожай.
#     Если нет - метод печатает предупреждение.
    def harvest():
        pass
# 5.	Создайте статический метод knowledge_base(), который выведет в консоль справку по садоводству.
    @staticmethod
    def knowledge_base():
        print('Справка по садоводству')
